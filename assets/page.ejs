<!DOCTYPE html>
<html lang="<%= htmlWebpackPlugin.options.defaultLanguage %>">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, maximum-scale=1">

        <link rel="license" href="https://mozilla.org/MPL/2.0/" hreflang="en">
        <link rel="help" href="help.html" type="text/html">
        <link rel="jslicense" href="licenses.html">

        <% for(var size of webpack.assets.filter((a) => a.name.includes('images/icon-')).map((a) => a.name.match(/icon-([0-9]+)\.png/)[1])) { %>
            <link rel="icon" sizes="<%= size %>x<%= size %>" type="image/png" href="images/icon-<%= size %>.png">
        <% } %>

        <meta name="apple-mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-status-bar-style" content="black">
        <link type="image/PNG" sizes="128x128" rel="apple-touch-icon" href="images/icon-128.png" >
        <link type="image/PNG" sizes="256x256" rel="apple-touch-icon" href="images/icon-256.png" >

        <meta name="msapplication-TileImage" content="images/icon-144.png">
        <meta name="msapplication-TileColor" content="#4DB300">

        <meta property="og:image" content="images/icon-512.png">

        <meta name="defaultLanguage" content="<%= htmlWebpackPlugin.options.defaultLanguage %>">
        <meta name="availableLanguages" content="<%= webpack.assets.filter((a) => a.name.includes('.properties')).map((a) => a.name.match(/\/([a-z]{2})\//)[1]).join(',') %>">

        <link rel="localization" href="locales/{locale}/app.properties">

        <% var bundle = require('!!properties!../locales/'+htmlWebpackPlugin.options.defaultLanguage+'/app.properties');
            var attrMap = {
                "aria-label": "ariaLabel"
            };
            var translateElement = function(id, options, attr) {
                var str = ' data-l10n-id="'+id+'">';

                var string = bundle[id] || bundle[id+'.innerHTML'];
                if(attr && !(attr in attrMap)) {
                    string = bundle[id + '.' + attr];
                }
                else if(attr && attr in attrMap) {
                    string = bundle[id + '.' + attrMap[attr]];
                }

                if(!string || !string.trim().length) {
                    throw "Empty string "+id;
                }

                if(options) {
                    for(var opt in options) {
                        string = string.replace(new RegExp("{{"+opt+"}}", "g"), options[opt]);
                    }
                    str = " data-l10n-args='"+JSON.stringify(options)+"'" + str;
                }

                if(!attr) {
                    str += string;
                }
                else {
                    str = ' '+attr+'="'+string+'"'+str;
                }

                return str;
            }; %>
        <title <%= translateElement(htmlWebpackPlugin.options.titleId) %></title>
    </head>
    <body role="application">
        <nav>
            <ul id="nav-mobile" class="side-nav fixed">
                <li><span class="subheader"<%= translateElement("menu_play") %></span></li>
                <li><a class="waves-effect" href="index.html#restore" hidden id="continuemenu"<%= translateElement("menu_continue") %></a></li>
                <li><a class="waves-effect" href="index.html#beginner"<%= translateElement("menu_difficulty_beginner") %></a></li>
                <li><a class="waves-effect" href="index.html#advanced"<%= translateElement("menu_difficulty_advanced") %></a></li>
                <li><a class="waves-effect" href="index.html#expert"<%= translateElement("menu_difficulty_expert") %></a></li>
                <li<%= htmlWebpackPlugin.options.filename == 'custom.html' ? ' class="active"': '' %>><a class="waves-effect" href="custom.html"<%= translateElement("menu_difficulty_custom") %></a></li>
                <li><hr class="divider"></li>
                <li<%= htmlWebpackPlugin.options.filename == 'highscores.html' ? ' class="active"': '' %>><a class="waves-effect" href="highscores.html"><i class="material-icons">list</i> <span<%= translateElement("highscores_title") %></span></a></li>
                <li<%= htmlWebpackPlugin.options.filename == 'settings.html' ? ' class="active"': '' %>><a class="waves-effect" href="settings.html"><i class="material-icons">settings</i> <span<%= translateElement("settings_title") %></span></a></li>
                <li<%= htmlWebpackPlugin.options.filename == 'help.html' ? ' class="active"': '' %>><a class="waves-effect" href="help.html"><i class="material-icons">help</i> <span<%= translateElement("help_title") %></span></a></li>
            </ul>
        <% var ctx = require.context("./", false, /.*\.html$/); var content = ctx('./'+htmlWebpackPlugin.options.filename); %>
        <%= content({
            options: htmlWebpackPlugin.options,
            files: webpack,
            translate: translateElement
        }) %>
    </body>
</html>

